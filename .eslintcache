[{"/Users/Siv/Desktop/nucampsite/src/index.js":"1","/Users/Siv/Desktop/nucampsite/src/reportWebVitals.js":"2","/Users/Siv/Desktop/nucampsite/src/App.js":"3","/Users/Siv/Desktop/nucampsite/src/components/MainComponent.js":"4","/Users/Siv/Desktop/nucampsite/src/components/DirectoryComponent.js":"5","/Users/Siv/Desktop/nucampsite/src/components/CampsiteInfoComponent.js":"6","/Users/Siv/Desktop/nucampsite/src/components/HeaderComponent.js":"7","/Users/Siv/Desktop/nucampsite/src/components/FooterComponent.js":"8","/Users/Siv/Desktop/nucampsite/src/components/HomeComponent.js":"9","/Users/Siv/Desktop/nucampsite/src/components/ContactComponent.js":"10","/Users/Siv/Desktop/nucampsite/src/components/AboutComponent.js":"11","/Users/Siv/Desktop/nucampsite/src/shared/campsites.js":"12","/Users/Siv/Desktop/nucampsite/src/shared/promotions.js":"13","/Users/Siv/Desktop/nucampsite/src/shared/comments.js":"14","/Users/Siv/Desktop/nucampsite/src/shared/partners.js":"15"},{"size":695,"mtime":1610262740109,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1610262740110,"results":"18","hashOfConfig":"17"},{"size":386,"mtime":1610262740105,"results":"19","hashOfConfig":"17"},{"size":2262,"mtime":1610262740109,"results":"20","hashOfConfig":"17"},{"size":1242,"mtime":1610262740107,"results":"21","hashOfConfig":"17"},{"size":6145,"mtime":1610412064683,"results":"22","hashOfConfig":"17"},{"size":2487,"mtime":1610262740108,"results":"23","hashOfConfig":"17"},{"size":1948,"mtime":1610262740108,"results":"24","hashOfConfig":"17"},{"size":1044,"mtime":1610262740108,"results":"25","hashOfConfig":"17"},{"size":9982,"mtime":1610410287365,"results":"26","hashOfConfig":"17"},{"size":4205,"mtime":1610262740106,"results":"27","hashOfConfig":"17"},{"size":1242,"mtime":1610262740110,"results":"28","hashOfConfig":"17"},{"size":303,"mtime":1610262740111,"results":"29","hashOfConfig":"17"},{"size":4243,"mtime":1610262740111,"results":"30","hashOfConfig":"17"},{"size":1054,"mtime":1610262740111,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"yang8a",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/Users/Siv/Desktop/nucampsite/src/index.js",[],["65","66"],"/Users/Siv/Desktop/nucampsite/src/reportWebVitals.js",[],"/Users/Siv/Desktop/nucampsite/src/App.js",[],"/Users/Siv/Desktop/nucampsite/src/components/MainComponent.js",[],"/Users/Siv/Desktop/nucampsite/src/components/DirectoryComponent.js",[],"/Users/Siv/Desktop/nucampsite/src/components/CampsiteInfoComponent.js",["67","68","69"],"import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, Breadcrumb, BreadcrumbItem, Button, Label, Modal, FormGroup, ModalBody, ModalHeader } from 'reactstrap';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst required = val => val && val.length;\r\nconst maxLength = len => val => !val || (val.length <= len);\r\nconst minLength = len => val => val && (val.length >= len);\r\n\r\nclass CommentForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: false\r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.toggleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        console.log(\"Current state is: \" + JSON.stringify(values));\r\n        alert(\"Current state is: \" + JSON.stringify(values));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Button outline onClick={this.toggleModal}>\r\n                    <i className=\"fa fa-pencil fa-lg\" />\r\n                    Submit Comment\r\n                </Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                <ModalHeader toggle={this.toggleModal}> Submit Comment </ModalHeader>\r\n                <ModalBody>\r\n                    <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                        <FormGroup>\r\n                         <Label>Rating</Label>\r\n                         <div className=\"form-group\">\r\n                             <Control.select model=\".rating\" id=\"rating\" placeholder=\"rating\" className=\"form-control\">\r\n                                 <option value=\"1\">1</option>\r\n                                 <option value=\"2\">2</option>\r\n                                 <option value=\"3\">3</option>\r\n                                 <optoin value=\"4\">4</optoin>\r\n                                 <option value=\"5\">5</option>\r\n                             </Control.select>\r\n                         </div>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                         <Label>Author</Label>   \r\n                         <div className=\"form-group\">\r\n                          <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                          placeholder=\"Author\"\r\n                                className=\"form-constrol\"\r\n                                validators={{\r\n                                    required,\r\n                                    minLength: minLength(2),\r\n                                    maxLenght: maxLength(15)\r\n                                }}\r\n                          />\r\n                         <Errors\r\n                         className=\"text-danger\" \r\n                         model=\".author\"\r\n                         show=\"touched\"\r\n                         component=\"div\"\r\n                         messages={{\r\n                             required: 'Required',\r\n                             minLength: 'Must be at least 2 characters',\r\n                             maxLength: 'Must be 15 characters or less'\r\n                         }} \r\n                         />        \r\n                         </div>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label>Comment</Label>\r\n                            <div className=\"form-group\">\r\n                            <Control.textarea model=\".text\" id=\"text\" name=\"text\" rows={6} placeholder=\"Comment\" className=\"form-control\"/>    \r\n                            </div>\r\n                        </FormGroup>\r\n                        <Button type=\"submit\" color=\"primary\">Submit</Button>\r\n                    </LocalForm>\r\n                </ModalBody>    \r\n                </Modal>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\nfunction RenderCampsite({ campsite }) {\r\n    return (\r\n        <div className='col-md-5 m-1'>\r\n            <Card>\r\n                <CardImg top src={campsite.image} alt={campsite.name} />\r\n                <CardBody>\r\n                        <CardText>{campsite.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction RenderComments({ comments }) {\r\n    if (comments) {\r\n        return (\r\n            <div className='col-md-5 m-1'>\r\n                <h4>Comments</h4>\r\n                {comments.map(comment => <div key={comment.id}>\r\n                <div>--{comment.text}\r\n                <br></br>\r\n                {comment.author}{new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</div>\r\n                <br></br>\r\n                \r\n                    </div>)}\r\n          <CommentForm />          \r\n        </div> \r\n        );   \r\n        } else {\r\n            return (\r\n                <div>\r\n                    \r\n                </div>\r\n            );\r\n        }\r\n}   \r\nfunction CampsiteInfo(props) {\r\n    if (props.campsite) {\r\n        return (\r\n            <div className='container'>\r\n                    <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to=\"/directory\">Directory</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>{props.campsite.name}</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <h2>{props.campsite.name}</h2>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className='row'>\r\n                    <RenderCampsite campsite={props.campsite} />\r\n                    <RenderComments comments={props.comments} />\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\nexport default CampsiteInfo;\r\n\r\n\r\n\r\n","/Users/Siv/Desktop/nucampsite/src/components/HeaderComponent.js",[],"/Users/Siv/Desktop/nucampsite/src/components/FooterComponent.js",[],"/Users/Siv/Desktop/nucampsite/src/components/HomeComponent.js",[],"/Users/Siv/Desktop/nucampsite/src/components/ContactComponent.js",[],"/Users/Siv/Desktop/nucampsite/src/components/AboutComponent.js",[],"/Users/Siv/Desktop/nucampsite/src/shared/campsites.js",[],"/Users/Siv/Desktop/nucampsite/src/shared/promotions.js",[],["70","71"],"/Users/Siv/Desktop/nucampsite/src/shared/comments.js",[],"/Users/Siv/Desktop/nucampsite/src/shared/partners.js",[],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":44,"column":30,"nodeType":"78","endLine":44,"endColumn":120},{"ruleId":"76","severity":1,"message":"79","line":56,"column":27,"nodeType":"78","endLine":64,"endColumn":29},{"ruleId":"76","severity":1,"message":"80","line":81,"column":29,"nodeType":"78","endLine":81,"endColumn":140},{"ruleId":"72","replacedBy":"81"},{"ruleId":"74","replacedBy":"82"},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE",["83"],["84"],"no-global-assign","no-unsafe-negation"]